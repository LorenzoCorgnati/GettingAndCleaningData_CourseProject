source('~/Dropbox/GettingAndCleaningData/Quiz_3-1.R')
ACSIdahoHousing$ACR
source('~/Dropbox/GettingAndCleaningData/Quiz_3-1.R')
1==!
1==1
ACSIdahoHousing$ACR==3
ACSIdahoHousing$ACR==3
source('~/Dropbox/GettingAndCleaningData/Quiz_3-1.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-1.R')
View(uno)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-1.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-1.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-1.R')
install.packages("jpeg")
?quantile
source('~/Dropbox/GettingAndCleaningData/Quiz_3-2.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(Edu)
colNames(GDP)
names(GDP)
colname(GDP)
colnames(GDP)
colnames(Edu)
View(Edu)
View(GDP)
View(Edu)
View(GDP)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
colnames(Edu)
colnames(GDP)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
?merge
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(mergedData)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
?order
View(GDP)
View(GDP)
View(mergedData)
View(mergedData)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
clonames(mergedData)
colnames(mergedData)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(mergedData)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
View(mergedData)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
eee<-reordered[157,2]
class(reordered)
eee<-reordered[157,]
eee
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
eee<-reordered$Gross.domestic.product.2012
eee<-mergedData$Gross.domestic.product.2012
eee
mergedData[34,]
class(mergedData)
rownames(reordered)
colnames(reordered)
reordered$Gross.domestic.product.2012
eee<-reordered$Gross.domestic.product.2012
eee[1]
eee[2]
class(eee)
as.numeric(eee,length=3)
fff<-sort(eee)
fff
class(fff)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
intersect(names(GDP), names(Edu))
intersect(Edu$CountryCode, GDP$X)
length(intersect(Edu$CountryCode, GDP$X))
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
View(GDP)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(GDP)
GDP$Gross.domestic.product.2012[1]
class(GDP$Gross.domestic.product.2012[1])
View(reordered)
View(reordered)
View(GDP)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(GDP)
dim(GDP)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(GDP)
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
View(reordered)
reordered$X
reordered$X[13]
reordered$X[13,1]
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
reordered$X[13]
colnames(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
OECD
class(mergedData$Income.group)
mergedData$Income.group
View(mergedData)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
OECD
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
View(mergedData)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
is.na(mergedData)
debugSource('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
View(mergedData)
View(reordered)
debugSource('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
table(reordered$GDP.Ranking.Groups, reordered$Income.Group)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
table(reordered$GDP.Ranking.Groups, reordered$Income.Group)
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
debugSource('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
View(reordered)
length(reordered$GDP.Ranking.Groups)
length(reordered$Income.Group)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
View(reordered)
source('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
table(reordered$GDP.Ranking.Groups, reordered$Income.Group)
debugSource('~/Dropbox/GettingAndCleaningData/Quiz_3-3_4_5.R')
View(mergedData)
View(reordered)
View(Edu)
q()
getwd()
dir()
install.packages("Hmisc")
q()
getwd()
R.version.string
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringAsFactors=FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydef")
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size>100500, r_os=="linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran2, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size-1000)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
?tbl_df
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
py_package <- group_by(.cran, package)
py_package <- group_by(cran, package)
by_package <- group_by(cran, package)
by_package
?summarize
summarize(by_package, mean(size))
play()
?n
end
end()
nxt()
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_counts <- filter(pack_sum, unique>465)
filter(pack_sum, unique>465)
top_counts <- filter(pack_sum, count>679)
top_unique <- filter(pack_sum, unique>465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
q()
getwd()
swirl()
library(swirl)
swirl()
library(tidyr)
studenta
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data=res, col=sex_class, into=c(sex,class))
separate(data=res, col=sex_class, into=c("sex","class"))
submit()
students3
submit()
play()
source("script2.R")
nxt()
submit()
reset()
View(students3)
submit()
submit()
?spread
play()
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
stocks <- data.frame(time = as.Date('2009-01-01') + 0:9,X = rnorm(10, 0, 1),Y = rnorm(10, 0, 2),Z = rnorm(10, 0, 4)
stocks <- data.frame(time = as.Date('2009-01-01') + 0:9,X = rnorm(10, 0, 1),Y = rnorm(10, 0, 2),Z = rnorm(10, 0, 4))
View(stocks)
stocksm <- stocks %>% gather(stock, price, -time)
View(stocksm)
stocksm %>% spread(stock, price)
nxt()
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
submit()
submit()
passed
failed
View(passed)
mutate(passed,passed$status="passed")
passed <- paased %>% mutate(status="passed")
passed <- passed %>% mutate(status="passed")
failed <- failed %>% mutate(status="failed")
View(passed)
View(failed)
r_bind(passed, failed)
r_bind(passed, failed)
rbind(passed, failed)
rbind_list(passed, failes)
rbind_list(passed, failed)
sat
play()
select(-contains("total"))
select(sat, -contains("total"))
select(sat, -contains("total"))%>%gather(part_sex, count, -score_range
select(sat, -contains("total"))%>%gather(part_sex, count, -score_range)
submit()
nxt()
submit()
submit()
submit()
q()
getwd()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment<-now()
this_moment
minute(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("1989 Maggio 17")
mdy("March 12, 1975")
mdy("Marzo 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
yms(dt2)
ymd(dt2)
this_moment
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours = 20, minutes = 50, seconds = 55)
this_moment
?now
nyc<-now(tzone="America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time<-with_tz(mdy("Giugno 17, 2008"),tzone="Singapore")
last_time
last_time<-with_tz(mdy("June 17, 2008"),tzone="Singapore")
last_time<-mdy("Giugno 17,2008", tz="Singapore")
last_time<-mdy("June 17,2008", tz="Singapore")
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
last_time<-mdy("Giugno 17, 2008", tz="Singapore")
last_time
last_time<-with_tz(mdy("Giugno 17, 2008"),tzone="Singapore")
last_time
last_time<-with_tz(mdy("Giugno 17, 2008"),tzone="Singapore")
last_time
last_time <- mdy("Giugno 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
q()
setwd("./GHRepo//GettingAndCleaningData_CourseProject")
dir()
source('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
head(mergedSet)
View(activitiyLabelsTest)
mergedSet$V1
head(mergedSet)
mergedSet$V562
mergedSet$V1[df$number == 1] <- "swimming"
mergedSet$V1[mergedSet$V1 == 1] <- "swimming"
head(mergedSet)
make.names("forza_toro")
make.names("forza toro")
make.names("forza-toro")
source('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
source('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabels)
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabels)
View(activityLabelsTrain)
activityLabels[i]
activityLabels[1,i]
View(activityLabels)
activityLabels$V2[i]
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabels)
View(activityLabelsTrain)
View(activityLabelsTrain)
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabels)
View(activityLabelsTrain)
View(activityLabelsTrain)
View(activityLabelsTrain)
seq_along(activityLabels)
seq_along(activityLabels$V2)
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabelsTrain)
class(activityLabelsTrain)
class(activityLabelsTrain[,1])
View(activityLabelsTrain)
tolower(activityLabelsTrain$V1)
activityLabelsTrain$V2 <- tolower(activityLabelsTrain$V2)
activityLabelsTrain$V1 <- tolower(activityLabelsTrain$V1)
View(activityLabels)
View(activityLabelsTrain)
aaa<-"forza_toro"
strsplit(aaa,"_")
unlist(strsplit(aaa,"_"))
unlist(strsplit(aaa,"_"))[1]
seq_along(activityLabelsTrain)
seq_along(activityLabelsTrain$V1)
unlist(strsplit(aaa,"_"))[2]
tmp2<-unlist(strsplit(aaa,"_"))[2]
tmp2
toupper(tmp[1])
toupper(tmp2[1])
toupper(tmp2[1,1])
toupper(tmp2[1][1])
tmp
tmp2
tmp2[1]
class(tmp2)
tmp2[1,1]
dim(tmp2)
substr(tmp2, 1, 1)
substr(tmp2, 1, 1) <- toupper(substr(tmp2, 1, 1))
tmp2
substr(tmp2, 1)
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabelsTrain)
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabelsTrain)
dim(unlist(strsplit(activityLabelsTrain$V1[i], "_")))
unlist(strsplit(activityLabelsTrain$V1[i], "_"))
length(unlist(strsplit(activityLabelsTrain$V1[i], "_")))
unlist(strsplit(activityLabelsTrain$V1[i], "_"))[2]
is.na(unlist(strsplit(activityLabelsTrain$V1[i], "_"))[2])
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabelsTrain)
aaa<-"forza_toro"
strsplit(aaa,"_")
bbb<-unlist(strsplit(aaa,"_"))
bbb
bbb[2]
bbb[2]<-substr(bbb[2],1,1) <- toupper(substr(bbb[2],1,1))
bbb
length(bbb[2])
class(bbb)
substr(bbb[2],1,last)
dim(bbb[2])
nchar(bbb[2])
bbb[2]
bbb<-unlist(strsplit(aaa,"_"))
bbb[2]
nchar(bbb[2])
length(bbb[2])
substr(bbb[2], 2, nchar(bbb[2]))
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabelsTrain)
debugSource('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabelsTrain)
class(activityLabelsTrain$V1)
activityLabelsTrain$V1 <- factor(activityLabelsTrain$V1)
class(activityLabelsTrain$V1)
View(activityLabelsTrain)
source('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabelsTest)
View(BodyAccXTrain)
source('~/Dropbox/GettingAndCleaningData/GHRepo/GettingAndCleaningData_CourseProject/run_analysis.R')
View(activityLabelsTest)
View(activityLabelsTrain)
View(mergedSet)
head(mergedSet)
q()
